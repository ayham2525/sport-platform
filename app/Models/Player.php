<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Player extends Model
{
    use HasFactory;
    const MODEL_NAME = 'Player';

    protected $fillable = [
        'user_id',
        'academy_id',
        'branch_id',
        'nationality_id',
        'birth_date',
        'gender',
        'player_code',
        'guardian_name',
        'guardian_phone',
        'position',
        'level',
        'shirt_size',
        'shorts_size',
        'shoe_size',
        'medical_notes',
        'remarks',
        'sport_id',
        'previous_school',
        'previous_academy',
    ];

    // Relationships
    public function user()
    {
        return $this->belongsTo(User::class);
    }

    public function academy()
    {
        return $this->belongsTo(Academy::class);
    }

    public function branch()
    {
        return $this->belongsTo(Branch::class);
    }

    public function nationality()
    {
        return $this->belongsTo(Nationality::class);
    }
    public function sport()
    {
        return $this->belongsTo(Sport::class);
    }

    public function programs()
    {
        return $this->belongsToMany(Program::class, 'player_program');
    }

    public function classes()
    {
        return $this->belongsToMany(ClassModel::class, 'class_model_player');
    }

    public function payments()
    {
        return $this->hasMany(Payment::class);
    }

    // Total revenue generated by this program
    public function totalRevenue()
    {
        return $this->payments()->sum('paid_amount');
    }

    // Count of players currently enrolled
    public function enrolledPlayersCount()
    {
        return $this->players()->count();
    }

    public function items()
    {
        return $this->belongsToMany(Item::class, 'uniform_requests')
                    ->withPivot('size', 'color', 'quantity')
                    ->withTimestamps();
    }

    public function card()
    {
        return $this->hasOne(Card::class, 'user_id', 'user_id');
    }

}
